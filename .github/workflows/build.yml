name: Build binary
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-binary:
    runs-on: ubuntu-latest

    permissions:
      repository-projects: write
      contents: write
      id-token: write
      issues: write
      pull-requests: write

    env:
      APP_NAME: gosak

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 400

      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
        id: go

      - name: CI - format
        run: |
          make -f common.mk fmt
          if [ $? != 0 ]; then
            echo "FAIL"
            exit
          fi
      - name: CI - test
        run: |
          echo "TODO: test"

      - name: version
        run: echo "::set-output name=version::$(date +"%Y%m%d-%H%M%S")"
        id: version

      - name: CD - build binary
        run: |
          echo "$(date)"
          echo "Build linux x86"
          make -f build.mk clean ENV=prod GOOS=linux GOARCH=amd64
          make -f build.mk build ENV=prod GOOS=linux GOARCH=amd64
          echo "Build linux arm"
          make -f build.mk clean ENV=prod GOOS=linux GOARCH=arm64
          make -f build.mk build ENV=prod GOOS=linux GOARCH=arm64
          echo "Build darwin x86"
          make -f build.mk clean ENV=prod GOOS=darwin GOARCH=amd64
          make -f build.mk build ENV=prod GOOS=darwin GOARCH=amd64
          echo "Build darwin arm"
          make -f build.mk clean ENV=prod GOOS=darwin GOARCH=arm64
          make -f build.mk build ENV=prod GOOS=darwin GOARCH=arm64

      - name: Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifacts linux x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosak.prod.linux.amd64
          asset_name: gosak.prod.linux.amd64
          asset_content_type: application/octet-stream
      - name: upload artifacts linux arm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosak.prod.linux.arm64
          asset_name: gosak.prod.linux.arm64
          asset_content_type: application/octet-stream
      - name: upload artifacts darwin x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosak.prod.darwin.amd64
          asset_name: gosak.prod.darwin.amd64
          asset_content_type: application/octet-stream
      - name: upload artifacts darwin arm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosak.prod.darwin.arm64
          asset_name: gosak.prod.darwin.arm64
          asset_content_type: application/octet-stream